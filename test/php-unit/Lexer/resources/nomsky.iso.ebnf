
"EBNF defined in itself." {
  syntax     = [ title ] , "{" , { rule } , "}" , [ comment ] .
  rule       = identifier , ( "=" | ":" | ":==" ) , expression , ( "." | ";" ) .
  expression = term { "|" , term } .
  term       = factor { ',' , factor } .
  factor     = identifier
             | literal
             | range
             | "[" , expression , "]"
             | "(" , expression , ")"
             | "{" , expression , "}" .

  identifier = letter , { letter | digit | "_" , letter } .
  title      = string_literal .
  comment    = string_literal .

  (* simple tokens *)

  concatenate = ',' .

  definition_list_start = '=' | ':=='  .

  definition_separator = '|' .

  start_repeat = '{' .

  end_repeat = '}' .

  start_option = '[' .

  end_option = ']' .

  start_group = '(' .

  end_group = ')' .

  terminator = '.' | ';' .

  single_quote = "'" .

  double_quote = '"' .

  range_operator = '..' .

  letter     = "a" .. "z" | "A" .. "Z" .

  digit      = "0" .. "9" .

  (* composite tokens *)

  character  = letter | digit | "+" | "-" | "*" | "/" | "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">" | "=" | "|" | "." | "," | ";" .

  char_literal      = single_quote , character , single_quote | double_quote , character , double_quote .

  string_literal     = single_quote , character , { character } , single_quote | double_quote , character , { character } , double_quote .

  range       = char_literal ".." char_literal .
}
